.form-container {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    width: 80%;
    min-height: 100vh; /* Take up full height of the viewport */
    margin-left: auto;
    margin-right: auto;
    padding: 20px;
    box-sizing: border-box;
  }
  
  .form-page {
    width: 100%;
    display: flex;
    flex-direction: column;
    align-items: center; /* Center the contents horizontally */
  }
  
  input[type="text"],
  input[type="number"],
  input[type="date"],
  select,
  textarea {
    width: 100%;
    max-width: 600px; /* This ensures the form doesn't get too wide on large screens */
    padding: 10px;
    margin-top: 10px;
    margin-bottom: 20px;
    border: 1px solid #ccc;
    border-radius: 4px;
  }
  
  .form-navigation {
    display: flex;
    justify-content: center; /* Center the navigation buttons */
    width: 100%;
  }
  
  button {
    padding: 10px 20px;
    margin-top: 20px;
    border: none;
    border-radius: 4px;
    cursor: pointer;
  }
  
  /* Additional styling for the button based on the image */
  button[type="submit"],
  button[type="button"] {
    background-color: #4CAF50; /* Example button color: green */
    color: white;
  }
  
  /* Add media query for very large screens if the form width needs to be capped */
  @media (min-width: 1200px) {
    .form-container {
      max-width: 960px; /* Adjust this value as needed */
    }
  }
  
  .form-page-enter {
    animation: slideIn 0.5s forwards;
  }
  
  .form-page-exit {
    animation: slideOut 0.5s forwards;
  }

  .form-page-enter-prev {
    animation: slideIn-prev 0.5s forwards;
  }
  
  .form-page-exit-prev {
    animation: slideOut-prev 0.5s forwards;
  }
/* Frog */
  .frog-section {
    text-align: center;
    transition: transform 2s;
  }

  .frog-image.enter {
    transition: transform 2s;
    transform: translateX(0); /* Initial position */
  }

  .frog-image.side {
    transform: translateX(-50%); /* Or any position you prefer */
    position: absolute;
    top: 20px; /* Adjust based on desired final position */
    left: 20px;
  }
  
  .frog-message-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    height: 100vh; /* Full viewport height */
    text-align: center;
    position: relative; /* Ensure the container has a positioning context */
    animation: fade-out 2s forwards;
  }
  
  .frog-image {
    max-width: 1000px; /* Adjust size as needed */
    margin-bottom: 20px;
    animation: move-to-side 2s forwards; /* Keep the frog on the side */
  }

  .frog-message-container p {
    animation: fade-out 2s forwards; /* Fade out the text */
  }
  
  /* Adjust button colors to match theme better */
  button[type="submit"], button[type="button"] {
    background-color: #0c2e8a; /* Adjusted to match theme */
    color: white;
  }
  
  button:hover {
    background-color: #50d8af; /* Lighter shade for hover effect */
  }

  .btn-show-form {
    margin-top: 20px;
    padding: 10px 20px;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    background-color: #4CAF50; /* Or any color that fits your theme */
    color: white;
  }
  
  /* Animations */
  @keyframes fade-in {
    from { opacity: 0; }
    to { opacity: 1; }
  }
  
    /* Keyframes for moving the frog to the side and fading out the text */
  @keyframes move-to-side {
    to { transform: translateX(calc(-10vw - 70% - 20px)); } /* Move frog to the edge, adjust as needed */
  }

  @keyframes fade-out {
    to { opacity: 0; visibility: hidden; }
  }
  
  /* Keyframes for slideIn and slideOut animations */
  @keyframes slideIn {
    from {
      transform: translateY(100%);
      opacity: 0;
    }
    to {
      transform: translateY(0);
      opacity: 1;
    }
  }
  
  @keyframes slideOut {
    from {
      transform: translateY(0);
      opacity: 1;
    }
    to {
      transform: translateY(-100%);
      opacity: 0;
    }
  }

  @keyframes slideIn-prev {
    from {
      transform: translateY(0);
      opacity: 1;
    }
    to {
      transform: translateY(100%);
      opacity: 0;
    }
  }
  
  @keyframes slideOut-prev {
    from {
      transform: translateY(-100%);
      opacity: 0;
      }
    
    to {
      transform: translateY(0);
      opacity: 1;
    }
  }